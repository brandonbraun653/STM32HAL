# ------------------------------------------
# Local Rules 
# ------------------------------------------

# 1. Check if variable exists from Jamroot
# 2. Validate the chip from a list of supported devices
# 3. Pass the chip into the project defines 
# 4. Pass chip specific sources and includes into targets
# 5: Create chip specific compiler/linker flags

rule is_chip_valid ( stm32f7_chip )
{
    ECHO "Chip validity function isn't implemented yet!" ;
    return FALSE ;
}

rule find_startup_file ( startup_dir : stm32f7_chip )
{
    # Use the check if valid chip rule here
    local chip_validity = [ is_chip_valid $(stm32f7_chip) ] ;

    if $(chip_validity) = TRUE
    {
        ECHO $(stm32f7_chip) ;
        if $(stm32f7_chip) = STM32F767xx
        {
            return $(startup_dir)/startup_stm32f767xx.c ;
        }

        ECHO "STM32F7 chip reported valid but not handled in 'find_startup_file'" ;
        return you_hit_an_error_in__rule_find_startup_file.c ;
    } 
    else
    {
        ECHO "STM32F7 Family Chip Invalid!" ;
        return you_hit_an_error_in__rule_find_startup_file.c ;
    }

}



# ------------------------------------------
# Build Target Specific Options 
# ------------------------------------------
f7_dbg_defs = DEBUG ;
f7_dbg_cflags = -ggdb -Og ;

f7_rel_defs = NDEBUG ;
f7_rel_cflags = -O3 ;

# ------------------------------------------
# CFlag Options
#   Specific: Device specific flags within the STM32F7 family
#   Local: Local target only flags that will not be propogated to dependents
#   Propagated: Will be propagated to dependents
# ------------------------------------------
specific_cflags = 
     -mfpu=fpv5-sp-d16
     ;

local_cflags = 
    -fno-common
    -fmessage-length=0
    -fno-exceptions
    -ffunction-sections
    -fdata-sections
    -Wall
    -mthumb
    --std=gnu11 
    ;

# Assumes all devices are Cortex-M7 processors with HW FPU
propagated_cflags = 
    -mfloat-abi=hard
    -mcpu=cortex-m7
    $(specific_cflags)
    ;

all_cflags =
    $(local_cflags)
    $(propagated_cflags)
    ;

# ------------------------------------------
# Link Flag Options
#   Specific: Device specific flags within the STM32F7 family
#   Local: Local target only flags that will not be propogated to dependents
#   Propagated: Will be propagated to dependents
# ------------------------------------------
specific_link_flags = 
    -mfpu=fpv5-sp-d16 
    -mabi=aapcs 
    ;

local_link_flags = 
    -mthumb 
    ;

# Assumes all devices are Cortex-M7 processors with hw FPU
propagated_link_flags = 
    -mfloat-abi=hard 
    -mcpu=cortex-m7
    $(specific_link_flags)
    ;

all_link_flags = 
    $(local_link_flags)
    $(propagated_link_flags)
    ;

# ------------------------------------------
# Source/Include Directories 
# ------------------------------------------
f7_hal_driver_src_dir = STM32F7xx_HAL_Driver/Src ;
f7_dev_system_src_dir = Device/sys ;
f7_dev_startup_src_dir = Device/startup ;


f7_inc = STM32F7xx_HAL_Driver/Inc ;
f7_dev = Device/include ;
f7_cfg = Device/conf ;
cmsis_inc = ../cmsis/CMSIS/Core/Include ;

# ------------------------------------------
# Source Files
# ------------------------------------------
f7_startup_src = [ find_startup_file $(f7_dev_startup_src_dir) : STM32F768xx ] ;
f7_system_src = $(f7_dev_system_src_dir)/system_stm32f7xx.c ;

f7_common_src = $(f7_startup_src) $(f7_system_src) ;
f7_ll_src = [ glob $(f7_hal_driver_src_dir)/stm32f7xx_ll_*.c ] ;
f7_hal_src = [ glob $(f7_hal_driver_src_dir)/stm32f7xx_hal_*.c ] ;

# ------------------------------------------
# Common Project Properties
# ------------------------------------------
project
    : usage-requirements
        <include>$(f7_inc)
        <cflags>$(propagated_cflags)
        <linkflags>$(propagated_link_flags)

    : requirements
        <define>USE_FULL_LL_DRIVER
        <source>$(f7_common_src)
        <include>$(f7_inc)
        <include>$(f7_dev)
        <include>$(f7_cfg)
        <include>$(cmsis_inc)
        <cflags>$(all_cflags)
        <linkflags>$(all_link_flags)
    ;

# ------------------------------------------
# STM32HAL Low Level Driver Lib Targets
# ------------------------------------------
lib LL_DRIVER : : : <link>static : ;

lib LL_DRIVER 
    :   $(f7_ll_src) 
    :   <variant>debug
        <define>$(f7_dbg_defs)
        <cflags>$(f7_dbg_cflags)
    :   <link>static
    ;

lib LL_DRIVER 
    :   $(f7_ll_src) 
    :   <variant>release
        <define>$(f7_rel_defs)
        <cflags>$(f7_rel_cflags)
    :   <link>static
    ;

explicit LL_DRIVER ;

# ------------------------------------------
# STM32HAL Driver Lib Targets
# ------------------------------------------
lib HAL_DRIVER : : : <link>static : ;

lib HAL_DRIVER 
    :   $(f7_hal_src)
    :   <variant>debug
        <define>$(f7_dbg_defs)
        <cflags>$(f7_dbg_cflags)
    :   <link>static
    ;

lib HAL_DRIVER
    :   $(f7_hal_src)
    :   <variant>release
        <define>$(f7_rel_defs)
        <cflags>$(f7_rel_cflags)
    :   <link>static
    ;

explicit HAL_DRIVER ;
